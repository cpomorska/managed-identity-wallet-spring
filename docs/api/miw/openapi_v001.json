{
  "openapi": "3.0.1",
  "info": {
    "title": "Managed Identity Wallets API",
    "description": "Managed Identity Wallets API",
    "termsOfService": "https://www.eclipse.org/legal/termsofuse.php",
    "contact": {
      "name": "Eclipse Tractus-X",
      "url": "https://projects.eclipse.org/projects/automotive.tractusx",
      "email": "tractusx-dev@eclipse.org"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://github.com/eclipse-tractusx/managed-identity-wallets/blob/develop/LICENSE"
    },
    "version": "0.0.1"
  },
  "security": [
    {"Authenticate using access_token": []},
    {"sts_token": []}
  ],
  "servers": [],
  "paths": {
    "/api/wallets": {
      "get": {
        "tags": [
          "Wallets"
        ],
        "summary": "List of wallets",
        "description": "Permission: **view_wallets** \n\n Retrieve list of registered wallets",
        "operationId": "getWallets",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, Page number start with zero",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 2147483647
            }
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Sort column name",
            "required": false,
            "schema": {
              "type": "string",
              "default": "createdAt"
            },
            "examples": {
              "Creation date": {
                "description": "Creation date",
                "value": "createdAt"
              },
              "Wallet BPN": {
                "description": "Wallet BPN",
                "value": "bpn"
              },
              "Wallet did": {
                "description": "Wallet did",
                "value": "did"
              },
              "Wallet name": {
                "description": "Wallet name",
                "value": "name"
              }
            }
          },
          {
            "name": "sortTpe",
            "in": "query",
            "description": "Sort order",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc"
            },
            "examples": {
              "Ascending order": {
                "description": "Ascending order",
                "value": "asc"
              },
              "Descending order": {
                "description": "Descending order",
                "value": "desc"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Wallet list",
            "content": {
              "application/json": {
                "examples": {
                  "Wallet list": {
                    "description": "Wallet list",
                    "value": {
                      "content": [
                        {
                          "name": "companyA",
                          "did": "did:web:localhost:BPNL000000000001",
                          "bpn": "BPNL000000000001",
                          "algorithm": "ED25519",
                          "didDocument": {
                            "@context": [
                              "https://www.w3.org/ns/did/v1",
                              "https://w3c.github.io/vc-jws-2020/contexts/v1"
                            ],
                            "id": "did:web:localhost:BPNL000000000001",
                            "verificationMethod": [
                              {
                                "controller": "did:web:localhost:BPNL000000000001",
                                "id": "did:web:localhost:BPNL000000000001#",
                                "publicKeyJwk": {
                                  "crv": "Ed25519",
                                  "kty": "OKP",
                                  "x": "mhph0ZSVk7cDVmazbaaC3jBDpphW4eNygAK9gHPlMow"
                                },
                                "type": "JsonWebKey2020"
                              }
                            ]
                          }
                        }
                      ],
                      "pageable": {
                        "sort": {
                          "empty": false,
                          "sorted": true,
                          "unsorted": false
                        },
                        "offset": 0,
                        "pageNumber": 0,
                        "pageSize": 1,
                        "paged": true,
                        "unpaged": false
                      },
                      "totalElements": 3,
                      "totalPages": 3,
                      "last": false,
                      "size": 1,
                      "number": 0,
                      "sort": {
                        "empty": false,
                        "sorted": true,
                        "unsorted": false
                      },
                      "first": true,
                      "numberOfElements": 1,
                      "empty": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The input does not comply to the syntax requirements",
            "content": {
              "application/json": {
                "examples": {
                  "Response in case of invalid data provided": {
                    "description": "Response in case of invalid data provided",
                    "value": {
                      "type": "about:blank",
                      "title": "title",
                      "status": 400,
                      "detail": "details",
                      "instance": "API endpoint",
                      "properties": {
                        "timestamp": 1689760833962,
                        "errors": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The request could not be completed due to a failed authorization."
          },
          "403": {
            "description": "The request could not be completed due to a forbidden access"
          },
          "500": {
            "description": "Any other internal server error",
            "content": {
              "application/json": {
                "examples": {
                  "Internal server error": {
                    "description": "Internal server error",
                    "value": {
                      "type": "about:blank",
                      "title": "Error Title",
                      "status": 500,
                      "detail": "Error Details",
                      "instance": "API endpoint",
                      "properties": {
                        "timestamp": 1689762476720
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authenticate using access_token": []
          }
        ]
      },
      "post": {
        "tags": [
          "Wallets"
        ],
        "summary": "Create Wallet",
        "description": "Permission: **add_wallets** (The BPN of the base wallet must equal BPN of caller)\n\n Create a wallet and store it",
        "operationId": "createWallet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWalletRequest"
              },
              "examples": {
                "Create wallet with BPN": {
                  "description": "Create wallet with BPN",
                  "value": {
                    "businessPartnerNumber": "BPNL000000000001",
                    "companyName": "companyA",
                    "didUrl": "portal.com:BPNL000000000001"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "examples": {
                  "Success response": {
                    "description": "Success response",
                    "value": {
                      "name": "companyA",
                      "did": "did:web:localhost:BPNL000000000001",
                      "bpn": "BPNL000000000501",
                      "algorithm": "ED25519",
                      "didDocument": {
                        "@context": [
                          "https://www.w3.org/ns/did/v1",
                          "https://w3c.github.io/vc-jws-2020/contexts/v1"
                        ],
                        "id": "did:web:localhost:BPNL000000000001",
                        "verificationMethod": [
                          {
                            "controller": "did:web:localhost:BPNL000000000001",
                            "id": "did:web:localhost:BPNL000000000001#key-1",
                            "publicKeyJwk": {
                              "crv": "Ed25519",
                              "kty": "OKP",
                              "x": "0Ap6FsX5UuRBIoOzxWtcFA2ymnqXw0U08Ino_mIuYM4"
                            },
                            "type": "JsonWebKey2020"
                          },
                          {
                            "controller": "did:web:localhost:BPNL000000000001",
                            "id": "did:web:localhost:BPNL000000000001#key-2",
                            "publicKeyJwk": {
                              "crv": "secp256k1",
                              "kty": "EC",
                              "x": "f9PkTOpsbcgKe_-s6bNCve3-aB1VZAFsCub8C5bhDn0",
                              "y": "xH1d7jCFavolGVZtaWcZZGP2nLuEsamDCotD56llxUk"
                            },
                            "type": "JsonWebKey2020"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The input does not comply to the syntax requirements",
            "content": {
              "application/json": {
                "examples": {
                  "Response in case of invalid data provided": {
                    "description": "Response in case of invalid data provided",
                    "value": {
                      "type": "about:blank",
                      "title": "Invalid data provided",
                      "status": 400,
                      "detail": "details",
                      "instance": "API endpoint",
                      "properties": {
                        "timestamp": 1689760833962,
                        "errors": {
                          "filed": "filed error message"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The request could not be completed due to a failed authorization."
          },
          "403": {
            "description": "The request could not be completed due to a forbidden access"
          },
          "409": {
            "description": "The request could not be completed due to a conflict.",
            "content": {
              "application/json": {
                "examples": {
                  "Wallet already exist": {
                    "description": "Wallet already exist",
                    "value": {
                      "type": "about:blank",
                      "title": "Wallet is already exists for bpn BPNL000000000001",
                      "status": 409,
                      "detail": "Wallet is already exists for bpn BPNL000000000001",
                      "instance": "/api/wallets",
                      "properties": {
                        "timestamp": 1689762639948
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Any other internal server error",
            "content": {
              "application/json": {
                "examples": {
                  "Internal server error": {
                    "description": "Internal server error",
                    "value": {
                      "type": "about:blank",
                      "title": "Error Title",
                      "status": 500,
                      "detail": "Error Details",
                      "instance": "API endpoint",
                      "properties": {
                        "timestamp": 1689762476720
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authenticate using access_token": []
          }
        ]
      }
    },
    "/api/wallets/{identifier}/credentials": {
      "post": {
        "tags": [
          "Wallets"
        ],
        "summary": "Store Verifiable Credential",
        "description": "Permission: **update_wallets** OR **update_wallet** (The BPN of wallet to extract credentials from must equal BPN of caller) \n\n Store a verifiable credential in the wallet of the given identifier",
        "operationId": "storeCredential",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "Did or BPN",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "bpn": {
                "description": "bpn",
                "value": "BPNL000000000000"
              },
              "did": {
                "description": "did",
                "value": "did:web:localhost:BPNL000000000000"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              },
              "example": {
                "@context": [
                  "https://www.w3.org/2018/credentials/v1",
                  "https://registry.lab.gaia-x.eu/development/api/trusted-shape-registry/v1/shapes/jsonld/trustframework#"
                ],
                "id": "did:web:localhost.in#123456789",
                "type": [
                  "VerifiableCredential",
                  "LegalParticipant"
                ],
                "issuer": "did:web:localhost.in",
                "issuanceDate": "2023-05-04T07:36:03.633Z",
                "credentialSubject": {
                  "id": "https://localhost/.well-known/participant.json",
                  "type": "gx:LegalParticipant",
                  "gx:legalName": "Sample Company",
                  "gx:legalRegistrationNumber": {
                    "gx:taxID": "113123123"
                  },
                  "gx:headquarterAddress": {
                    "gx:countrySubdivisionCode": "BE-BRU"
                  },
                  "gx:legalAddress": {
                    "gx:countrySubdivisionCode": "BE-BRU"
                  },
                  "gx-terms-and-conditions:gaiaxTermsAndConditions": "70c1d713215f95191a11d38fe2341faed27d19e083917bc8732ca4fea4976700"
                },
                "proof": {
                  "type": "JsonWebSignature2020",
                  "created": "2023-05-04T07:36:04.079Z",
                  "proofPurpose": "assertionMethod",
                  "verificationMethod": "did:web:localhost",
                  "jws": "eyJhbGciOiJQUzI1NiIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iHki8WC3nPfcSRkC_AV4tXh0ikfT7BLPTGc_0ecI8zontTmJLqwcpPfAt0PFsoo3SkZgc6j636z55jj5tagBc-OKoiDu7diWryNAnL9ASsmWJyrPhOKVARs6x6PxVaTFBuyCfAHZeipxmkcYfNB_jooIXO2HuRcL2odhsQHELkGc5IDD-aBMWyNpfVAaYQ-cCzvDflZQlsowziUKfMkBfwpwgMdXFIgKWYdDIRvzA-U-XiC11-6QV7tPeKsMguEU0F5bh8cCEm2rooqXtENcsM_7cqFdQoOyblJyM-agoz2LUTj9QIdn9_gnNkGN-2U7_qBJWmHkK1Hm_mHqcNeeQw"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "examples": {
                  "Success Response": {
                    "description": "Success Response",
                    "value": {
                      "message": "Credential with id did:web:localhost#123456789 has been successfully stored"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The input does not comply to the syntax requirements",
            "content": {
              "application/json": {
                "examples": {
                  "Response in case of invalid data provided": {
                    "description": "Response in case of invalid data provided",
                    "value": {
                      "type": "about:blank",
                      "title": "title",
                      "status": 400,
                      "detail": "details",
                      "instance": "API endpoint",
                      "properties": {
                        "timestamp": 1689760833962,
                        "errors": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The request could not be completed due to a failed authorization."
          },
          "403": {
            "description": "The request could not be completed due to a forbidden access"
          },
          "404": {
            "description": "Wallet not found with provided identifier",
            "content": {
              "application/json": {
                "examples": {
                  "Wallet not found with provided identifier": {
                    "description": "Wallet not found with provided identifier",
                    "value": {
                      "type": "about:blank",
                      "title": "Wallet not found for identifier did:web:localhost:BPNL000000044001",
                      "status": 404,
                      "detail": "Wallet not found for identifier did:web:localhost:BPNL000000044001",
                      "instance": "/api/wallets/did%3Aweb%3Alocalhost%3ABPNL0000000/credentials",
                      "properties": {
                        "timestamp": 1689765541959
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Any other internal server error",
            "content": {
              "application/json": {
                "examples": {
                  "Internal server error": {
                    "description": "Internal server error",
                    "value": {
                      "type": "about:blank",
                      "title": "Error Title",
                      "status": 500,
                      "detail": "Error Details",
                      "instance": "API endpoint",
                      "properties": {
                        "timestamp": 1689762476720
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authenticate using access_token": []
          }
        ]
      }
    },
    "/api/token": {
      "post": {
        "tags": [
          "STS"
        ],
        "summary": "Create and Sign Access Tokens",
        "description": "The endpoint for creating and signing access tokens which are to be used during a verifiable presentation flow.",
        "operationId": "token_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SecureTokenRequest"
              },
              "examples": {
                "Request Secure Token using Scopes": {
                  "description": "Request Secure Token using Scopes",
                  "value": {
                    "audience": "BPNL000000000009",
                    "client_id": "your_client_id",
                    "client_secret": "your_client_secret",
                    "grant_type": "client_credentials",
                    "bearer_access_scope": "org.eclipse.tractusx.vc.type:ValidCredentialType:read"
                  }
                },
                "Request Secure Token using Access Token": {
                  "description": "Request Secure Token using Access Token",
                  "value": {
                    "audience": "BPNL000000000009",
                    "client_id": "your_client_id",
                    "client_secret": "your_client_secret",
                    "grant_type": "client_credentials",
                    "access_token": "a_jwt_token"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "examples": {
                  "Success response": {
                    "description": "Success response",
                    "value": {
                      "token": "a_jwt_token",
                      "expiresAt": 1706888709315
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "examples": {
                  "Unknown BPN": {
                    "description": "Unknown BPN",
                    "value": {
                      "error": "UnknownBusinessPartnerNumber",
                      "errorDescription": "The provided BPN 'BPNL000000000001' is unknown"
                    }
                  },
                  "Wrong Grant Type": {
                    "description": "Wrong Grant Type",
                    "value": {
                      "error": "UnsupportedGrantTypeException",
                      "errorDescription": "The provided 'grant_type' is not valid. Use 'client_credentials'."
                    }
                  },
                  "Invalid idp Token Response": {
                    "description": "Invalid idp Token Response",
                    "value": {
                      "error": "InvalidIdpTokenResponse",
                      "errorDescription": "The idp response cannot be null. Possible causes for this are: the 'clientId' is invalid, or the 'client' is not enabled."
                    }
                  },
                  "Invalid Secure Token Request": {
                    "description": "Invalid Secure Token Request",
                    "value": {
                      "error": "InvalidSecureTokenRequest",
                      "errorDescription": "The provided data could not be used to create and sign a token."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Any other internal server error",
            "content": {
              "application/json": {
                "examples": {
                  "Internal server error": {
                    "description": "Internal server error",
                    "value": {
                      "type": "about:blank",
                      "title": "Error Title",
                      "status": 500,
                      "detail": "Error Details",
                      "instance": "API endpoint",
                      "properties": {
                        "timestamp": 1689762476720
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/presentations": {
      "post": {
        "tags": [
          "Verifiable Presentations - Generation"
        ],
        "summary": "Create Verifiable Presentation",
        "description": "Permission: **update_wallets** OR **update_wallet** (The BPN of the issuer of the Verifiable Presentation must equal to BPN of caller) \n\n Create a verifiable presentation from a list of verifiable credentials, signed by the holder",
        "operationId": "createPresentation",
        "parameters": [
          {
            "name": "audience",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asJwt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              },
              "example": {
                "verifiableCredentials": [
                  {
                    "id": "did:web:localhost:BPNL000000000000#f73e3631-ba87-4a03-bea3-b28700056879",
                    "@context": [
                      "https://www.w3.org/2018/credentials/v1",
                      "https://catenax-ng.github.io/product-core-schemas/businessPartnerData.json",
                      "https://w3id.org/security/suites/jws-2020/v1"
                    ],
                    "type": [
                      "VerifiableCredential",
                      "BpnCredential"
                    ],
                    "issuer": "did:web:localhost:BPNL000000000000",
                    "expirationDate": "2024-12-31T18:30:00Z",
                    "issuanceDate": "2023-07-19T09:11:34Z",
                    "credentialSubject": [
                      {
                        "bpn": "BPNL000000000000",
                        "id": "did:web:localhost:BPNL000000000000",
                        "type": "BpnCredential"
                      }
                    ],
                    "proof": {
                      "created": "2023-07-19T09:11:39Z",
                      "jws": "eyJhbGciOiJFZERTQSJ9..fdn2qU85auOltdHDLdHI7sJVV1ZPdftpiXd_ndXN0dFgSDWiIrScdD03wtvKLq_H-shQWfh2RYeMmrlEzAhfDw",
                      "proofPurpose": "proofPurpose",
                      "type": "JsonWebSignature2020",
                      "verificationMethod": "did:web:localhost:BPNL000000000000#"
                    }
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Verifiable Presentation",
            "content": {
              "application/json": {
                "examples": {
                  "VP as Json-LD": {
                    "description": "VP as Json-LD",
                    "value": {
                      "vp": {
                        "@context": [
                          "https://www.w3.org/2018/credentials/v1"
                        ],
                        "id": "did:web:localhost:BPNL000000000000#b2e69e47-95f3-48ff-af30-eaaab36431d5",
                        "type": [
                          "VerifiablePresentation"
                        ],
                        "verifiableCredential": [
                          {
                            "id": "did:web:localhost:BPNL000000000000#f73e3631-ba87-4a03-bea3-b28700056879",
                            "@context": [
                              "https://www.w3.org/2018/credentials/v1",
                              "https://catenax-ng.github.io/product-core-schemas/businessPartnerData.json",
                              "https://w3id.org/security/suites/jws-2020/v1"
                            ],
                            "type": [
                              "VerifiableCredential",
                              "BpnCredential"
                            ],
                            "issuer": "did:web:localhost:BPNL000000000000",
                            "expirationDate": "2024-12-31T18:30:00Z",
                            "issuanceDate": "2023-07-19T09:11:34Z",
                            "credentialSubject": [
                              {
                                "bpn": "BPNL000000000000",
                                "id": "did:web:localhost:BPNL000000000000",
                                "type": "BpnCredential"
                              }
                            ],
                            "proof": {
                              "created": "2023-07-19T09:11:39Z",
                              "jws": "eyJhbGciOiJFZERTQSJ9..fdn2qU85auOltdHDLdHI7sJVV1ZPdftpiXd_ndXN0dFgSDWiIrScdD03wtvKLq_H-shQWfh2RYeMmrlEzAhfDw",
                              "proofPurpose": "proofPurpose",
                              "type": "JsonWebSignature2020",
                              "verificationMethod": "did:web:localhost:BPNL000000000000#"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "VP as JWT": {
                    "description": "VP as JWT",
                    "value": {
                      "vp": "eyJraWQiOiJkaWQ6d2ViOmxvY2FsaG9zdDpCUE5MMDAwMDAwMDAwMDAwIiwidHlwIjoiSldUIiwiYWxnIjoiRWREU0EifQ.eyJzdWIiOiJkaWQ6d2ViOmxvY2FsaG9zdDpCUE5MMDAwMDAwMDAwMDAwIiwiYXVkIjoic21hcnQiLCJpc3MiOiJkaWQ6d2ViOmxvY2FsaG9zdDpCUE5MMDAwMDAwMDAwMDAwIiwidnAiOnsiaWQiOiJkaWQ6d2ViOmxvY2FsaG9zdDpCUE5MMDAwMDAwMDAwMDAwIzM4ZTU2ZTg1LTNkODQtNGEyNS1iZjg1LWFiMjRlYzY4MmMwOSIsInR5cGUiOlsiVmVyaWZpYWJsZVByZXNlbnRhdGlvbiJdLCJAY29udGV4dCI6WyJodHRwczovL3d3dy53My5vcmcvMjAxOC9jcmVkZW50aWFscy92MSJdLCJ2ZXJpZmlhYmxlQ3JlZGVudGlhbCI6eyJAY29udGV4dCI6WyJodHRwczovL3d3dy53My5vcmcvMjAxOC9jcmVkZW50aWFscy92MSIsImh0dHBzOi8vY2F0ZW5heC1uZy5naXRodWIuaW8vcHJvZHVjdC1jb3JlLXNjaGVtYXMvYnVzaW5lc3NQYXJ0bmVyRGF0YS5qc29uIiwiaHR0cHM6Ly93M2lkLm9yZy9zZWN1cml0eS9zdWl0ZXMvandzLTIwMjAvdjEiXSwidHlwZSI6WyJWZXJpZmlhYmxlQ3JlZGVudGlhbCIsIkJwbkNyZWRlbnRpYWwiXSwiaWQiOiJkaWQ6d2ViOmxvY2FsaG9zdDpCUE5MMDAwMDAwMDAwMDAwI2Y3M2UzNjMxLWJhODctNGEwMy1iZWEzLWIyODcwMDA1Njg3OSIsImlzc3VlciI6ImRpZDp3ZWI6bG9jYWxob3N0OkJQTkwwMDAwMDAwMDAwMDAiLCJpc3N1YW5jZURhdGUiOiIyMDIzLTA3LTE5VDA5OjExOjM0WiIsImV4cGlyYXRpb25EYXRlIjoiMjAyNC0xMi0zMVQxODozMDowMFoiLCJjcmVkZW50aWFsU3ViamVjdCI6eyJpZCI6ImRpZDp3ZWI6bG9jYWxob3N0OkJQTkwwMDAwMDAwMDAwMDAiLCJicG4iOiJCUE5MMDAwMDAwMDAwMDAwIiwidHlwZSI6IkJwbkNyZWRlbnRpYWwifSwicHJvb2YiOnsicHJvb2ZQdXJwb3NlIjoicHJvb2ZQdXJwb3NlIiwidHlwZSI6Ikpzb25XZWJTaWduYXR1cmUyMDIwIiwidmVyaWZpY2F0aW9uTWV0aG9kIjoiZGlkOndlYjpsb2NhbGhvc3Q6QlBOTDAwMDAwMDAwMDAwMCMiLCJjcmVhdGVkIjoiMjAyMy0wNy0xOVQwOToxMTozOVoiLCJqd3MiOiJleUpoYkdjaU9pSkZaRVJUUVNKOS4uZmRuMnFVODVhdU9sdGRIRExkSEk3c0pWVjFaUGRmdHBpWGRfbmRYTjBkRmdTRFdpSXJTY2REMDN3dHZLTHFfSC1zaFFXZmgyUlllTW1ybEV6QWhmRHcifX19LCJleHAiOjE2ODk4MzQ4MDUsImp0aSI6ImIwODYzOWZiLWQ5MWEtNGUwZS1iNmY4LTYzYjdhMzQ1ZTRhZiJ9.80x0AB-OauefdeZfx1cwhitdVKRvCRFeFzYwU73DL7y4w34vu6BdfHWLBGjkwELxkQEoFfiTPOqtuyqhtsyDBg"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The request could not be completed due to a failed authorization."
          },
          "403": {
            "description": "The request could not be completed due to a forbidden access"
          },
          "404": {
            "description": "Wallet not found with provided identifier",
            "content": {
              "application/json": {
                "examples": {
                  "Wallet not found with provided identifier": {
                    "description": "Wallet not found with provided identifier",
                    "value": {
                      "type": "about:blank",
                      "title": "Error Title",
                      "status": 404,
                      "detail": "Error Details",
                      "instance": "API endpoint",
                      "properties": {
                        "timestamp": 1689762476720
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Any other internal server error",
            "content": {
              "application/json": {
                "examples": {
                  "Internal server error": {
                    "description": "Internal server error",
                    "value": {
                      "type": "about:blank",
                      "title": "Error Title",
                      "status": 500,
                      "detail": "Error Details",
                      "instance": "API endpoint",
                      "properties": {
                        "timestamp": 1689762476720
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authenticate using access_token": []
          }
        ]
      }
    },
    "/api/presentations/validation": {
      "post": {
        "tags": [
          "Verifiable Presentations - Validation"
        ],
        "summary": "Validate Verifiable Presentation",
        "description": "Permission: **view_wallets** OR **view_wallet**  \n\n Validate Verifiable Presentation with all included credentials",
        "operationId": "validatePresentation",
        "parameters": [
          {
            "name": "audience",
            "in": "query",
            "description": "Audience to validate in VP (Only supported in case of JWT formatted VP)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asJwt",
            "in": "query",
            "description": "Pass true in case of VP is in JWT format",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "withCredentialExpiryDate",
            "in": "query",
            "description": "Check expiry of VC(Only supported in case of JWT formatted VP)",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              },
              "examples": {
                "VP as JWT": {
                  "description": "VP as JWT",
                  "value": {
                    "vp": "eyJraWQiOiJkaWQ6d2ViOmxvY2FsaG9zdDpCUE5MMDAwMDAwMDAwMDAwIiwidHlwIjoiSldUIiwiYWxnIjoiRWREU0EifQ.eyJzdWIiOiJkaWQ6d2ViOmxvY2FsaG9zdDpCUE5MMDAwMDAwMDAwMDAwIiwiYXVkIjoic21hcnQiLCJpc3MiOiJkaWQ6d2ViOmxvY2FsaG9zdDpCUE5MMDAwMDAwMDAwMDAwIiwidnAiOnsiaWQiOiJkaWQ6d2ViOmxvY2FsaG9zdDpCUE5MMDAwMDAwMDAwMDAwIzZmZWRmYWRmLWYxNTItNGNjZS05MWQ1LWNjMjhhNzhlMTExMyIsInR5cGUiOlsiVmVyaWZpYWJsZVByZXNlbnRhdGlvbiJdLCJAY29udGV4dCI6WyJodHRwczovL3d3dy53My5vcmcvMjAxOC9jcmVkZW50aWFscy92MSJdLCJ2ZXJpZmlhYmxlQ3JlZGVudGlhbCI6eyJAY29udGV4dCI6WyJodHRwczovL3d3dy53My5vcmcvMjAxOC9jcmVkZW50aWFscy92MSIsImh0dHBzOi8vY2F0ZW5heC1uZy5naXRodWIuaW8vcHJvZHVjdC1jb3JlLXNjaGVtYXMvYnVzaW5lc3NQYXJ0bmVyRGF0YS5qc29uIiwiaHR0cHM6Ly93M2lkLm9yZy9zZWN1cml0eS9zdWl0ZXMvandzLTIwMjAvdjEiXSwidHlwZSI6WyJWZXJpZmlhYmxlQ3JlZGVudGlhbCIsIkJwbkNyZWRlbnRpYWwiXSwiaWQiOiJkaWQ6d2ViOmxvY2FsaG9zdDpCUE5MMDAwMDAwMDAwMDAwI2Y3M2UzNjMxLWJhODctNGEwMy1iZWEzLWIyODcwMDA1Njg3OSIsImlzc3VlciI6ImRpZDp3ZWI6bG9jYWxob3N0OkJQTkwwMDAwMDAwMDAwMDAiLCJpc3N1YW5jZURhdGUiOiIyMDIzLTA3LTE5VDA5OjExOjM0WiIsImV4cGlyYXRpb25EYXRlIjoiMjAyNC0xMi0zMVQxODozMDowMFoiLCJjcmVkZW50aWFsU3ViamVjdCI6eyJpZCI6ImRpZDp3ZWI6bG9jYWxob3N0OkJQTkwwMDAwMDAwMDAwMDAiLCJicG4iOiJCUE5MMDAwMDAwMDAwMDAwIiwidHlwZSI6IkJwbkNyZWRlbnRpYWwifSwicHJvb2YiOnsicHJvb2ZQdXJwb3NlIjoicHJvb2ZQdXJwb3NlIiwidHlwZSI6Ikpzb25XZWJTaWduYXR1cmUyMDIwIiwidmVyaWZpY2F0aW9uTWV0aG9kIjoiZGlkOndlYjpsb2NhbGhvc3Q6QlBOTDAwMDAwMDAwMDAwMCMiLCJjcmVhdGVkIjoiMjAyMy0wNy0xOVQwOToxMTozOVoiLCJqd3MiOiJleUpoYkdjaU9pSkZaRVJUUVNKOS4uZmRuMnFVODVhdU9sdGRIRExkSEk3c0pWVjFaUGRmdHBpWGRfbmRYTjBkRmdTRFdpSXJTY2REMDN3dHZLTHFfSC1zaFFXZmgyUlllTW1ybEV6QWhmRHcifX19LCJleHAiOjE2ODk3NTg1NDQsImp0aSI6IjdlNWE4MzQ4LTgwZjUtNGIzMS1iMDNlLTBiOTJmNzc4ZTVjZiJ9.c7FS-CLwm3vxfO9847M5sqcVxv3QbwwSmSsFWcGif7MOesjt1pdnARlQ4pvHzgsFj1UqBEvHwZQvyYyPCQg_Cw"
                  }
                },
                "VP as json-ld": {
                  "description": "VP as json-ld",
                  "value": {
                    "vp": {
                      "id": "b9d97cef-758d-4a7c-843d-86f17632b08a",
                      "type": [
                        "VerifiablePresentation"
                      ],
                      "@context": [
                        "https://www.w3.org/2018/credentials/v1"
                      ],
                      "verifiableCredential": [
                        {
                          "id": "did:web:localhost:BPNL000000000000#f73e3631-ba87-4a03-bea3-b28700056879",
                          "@context": [
                            "https://www.w3.org/2018/credentials/v1",
                            "https://catenax-ng.github.io/product-core-schemas/businessPartnerData.json",
                            "https://w3id.org/security/suites/jws-2020/v1"
                          ],
                          "type": [
                            "VerifiableCredential",
                            "BpnCredential"
                          ],
                          "issuer": "did:web:localhost:BPNL000000000000",
                          "expirationDate": "2024-12-31T18:30:00Z",
                          "issuanceDate": "2023-07-19T09:11:34Z",
                          "credentialSubject": [
                            {
                              "bpn": "BPNL000000000000",
                              "id": "did:web:localhost:BPNL000000000000",
                              "type": "BpnCredential"
                            }
                          ],
                          "proof": {
                            "created": "2023-07-19T09:11:39Z",
                            "jws": "eyJhbGciOiJFZERTQSJ9..fdn2qU85auOltdHDLdHI7sJVV1ZPdftpiXd_ndXN0dFgSDWiIrScdD03wtvKLq_H-shQWfh2RYeMmrlEzAhfDw",
                            "proofPurpose": "proofPurpose",
                            "type": "JsonWebSignature2020",
                            "verificationMethod": "did:web:localhost:BPNL000000000000#"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Verifiable presentation validate",
            "content": {
              "application/json": {
                "examples": {
                  "VP as JWT": {
                    "description": "VP as JWT",
                    "value": {
                      "valid": true,
                      "validateJWTExpiryDate": true,
                      "validateAudience": true,
                      "vp": "eyJraWQiOiJkaWQ6d2ViOmxvY2FsaG9zdDpCUE5MMDAwMDAwMDAwMDAwIiwidHlwIjoiSldUIiwiYWxnIjoiRWREU0EifQ.eyJzdWIiOiJkaWQ6d2ViOmxvY2FsaG9zdDpCUE5MMDAwMDAwMDAwMDAwIiwiYXVkIjoic21hcnQiLCJpc3MiOiJkaWQ6d2ViOmxvY2FsaG9zdDpCUE5MMDAwMDAwMDAwMDAwIiwidnAiOnsiaWQiOiJkaWQ6d2ViOmxvY2FsaG9zdDpCUE5MMDAwMDAwMDAwMDAwIzM4ZTU2ZTg1LTNkODQtNGEyNS1iZjg1LWFiMjRlYzY4MmMwOSIsInR5cGUiOlsiVmVyaWZpYWJsZVByZXNlbnRhdGlvbiJdLCJAY29udGV4dCI6WyJodHRwczovL3d3dy53My5vcmcvMjAxOC9jcmVkZW50aWFscy92MSJdLCJ2ZXJpZmlhYmxlQ3JlZGVudGlhbCI6eyJAY29udGV4dCI6WyJodHRwczovL3d3dy53My5vcmcvMjAxOC9jcmVkZW50aWFscy92MSIsImh0dHBzOi8vY2F0ZW5heC1uZy5naXRodWIuaW8vcHJvZHVjdC1jb3JlLXNjaGVtYXMvYnVzaW5lc3NQYXJ0bmVyRGF0YS5qc29uIiwiaHR0cHM6Ly93M2lkLm9yZy9zZWN1cml0eS9zdWl0ZXMvandzLTIwMjAvdjEiXSwidHlwZSI6WyJWZXJpZmlhYmxlQ3JlZGVudGlhbCIsIkJwbkNyZWRlbnRpYWwiXSwiaWQiOiJkaWQ6d2ViOmxvY2FsaG9zdDpCUE5MMDAwMDAwMDAwMDAwI2Y3M2UzNjMxLWJhODctNGEwMy1iZWEzLWIyODcwMDA1Njg3OSIsImlzc3VlciI6ImRpZDp3ZWI6bG9jYWxob3N0OkJQTkwwMDAwMDAwMDAwMDAiLCJpc3N1YW5jZURhdGUiOiIyMDIzLTA3LTE5VDA5OjExOjM0WiIsImV4cGlyYXRpb25EYXRlIjoiMjAyNC0xMi0zMVQxODozMDowMFoiLCJjcmVkZW50aWFsU3ViamVjdCI6eyJpZCI6ImRpZDp3ZWI6bG9jYWxob3N0OkJQTkwwMDAwMDAwMDAwMDAiLCJicG4iOiJCUE5MMDAwMDAwMDAwMDAwIiwidHlwZSI6IkJwbkNyZWRlbnRpYWwifSwicHJvb2YiOnsicHJvb2ZQdXJwb3NlIjoicHJvb2ZQdXJwb3NlIiwidHlwZSI6Ikpzb25XZWJTaWduYXR1cmUyMDIwIiwidmVyaWZpY2F0aW9uTWV0aG9kIjoiZGlkOndlYjpsb2NhbGhvc3Q6QlBOTDAwMDAwMDAwMDAwMCMiLCJjcmVhdGVkIjoiMjAyMy0wNy0xOVQwOToxMTozOVoiLCJqd3MiOiJleUpoYkdjaU9pSkZaRVJUUVNKOS4uZmRuMnFVODVhdU9sdGRIRExkSEk3c0pWVjFaUGRmdHBpWGRfbmRYTjBkRmdTRFdpSXJTY2REMDN3dHZLTHFfSC1zaFFXZmgyUlllTW1ybEV6QWhmRHcifX19LCJleHAiOjE2ODk4MzQ4MDUsImp0aSI6ImIwODYzOWZiLWQ5MWEtNGUwZS1iNmY4LTYzYjdhMzQ1ZTRhZiJ9.80x0AB-OauefdeZfx1cwhitdVKRvCRFeFzYwU73DL7y4w34vu6BdfHWLBGjkwELxkQEoFfiTPOqtuyqhtsyDBg",
                      "validateExpiryDate": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The input does not comply to the syntax requirements",
            "content": {
              "application/json": {
                "examples": {
                  "Validation of VP in form of JSON-LD is not supported": {
                    "description": "Validation of VP in form of JSON-LD is not supported",
                    "value": {
                      "type": "about:blank",
                      "title": "Validation of VP in form of JSON-LD is not supported",
                      "status": 400,
                      "detail": "Validation of VP in form of JSON-LD is not supported",
                      "instance": "/api/presentations/validation",
                      "properties": {
                        "timestamp": 1689835085703
                      }
                    }
                  },
                  "Response in case of invalid data provided": {
                    "description": "Response in case of invalid data provided",
                    "value": {
                      "type": "about:blank",
                      "title": "Invalid data provided",
                      "status": 400,
                      "detail": "details",
                      "instance": "API endpoint",
                      "properties": {
                        "timestamp": 1689760833962,
                        "errors": {
                          "filed": "filed error message"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The request could not be completed due to a failed authorization."
          },
          "403": {
            "description": "The request could not be completed due to a forbidden access"
          },
          "500": {
            "description": "Any other internal server error",
            "content": {
              "application/json": {
                "examples": {
                  "Internal server error": {
                    "description": "Internal server error",
                    "value": {
                      "type": "about:blank",
                      "title": "Error Title",
                      "status": 500,
                      "detail": "Error Details",
                      "instance": "API endpoint",
                      "properties": {
                        "timestamp": 1689762476720
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authenticate using access_token": []
          }
        ]
      }
    },
    "/api/credentials": {
      "get": {
        "tags": [
          "Verifiable Credential - Holder"
        ],
        "summary": "Query Verifiable Credentials",
        "description": "Permission: **view_wallets** OR **view_wallet** (The BPN of holderIdentifier must equal BPN of caller)\n\n Search verifiable credentials with filter criteria",
        "operationId": "getCredentials",
        "parameters": [
          {
            "name": "credentialId",
            "in": "query",
            "description": "Credential Id",
            "required": false,
            "schema": {
              "type": "string"
            },
            "examples": {
              "Credential Id": {
                "description": "Credential Id",
                "value": "did:web:localhost:BPNL000000000000#12528899-160a-48bd-ba15-f396c3959ae9"
              }
            }
          },
          {
            "name": "issuerIdentifier",
            "in": "query",
            "description": "Issuer identifier(did of BPN)",
            "required": false,
            "schema": {
              "type": "string"
            },
            "examples": {
              "bpn": {
                "description": "bpn",
                "value": "BPNL000000000000"
              },
              "did": {
                "description": "did",
                "value": "did:web:localhost:BPNL000000000000"
              }
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type of VC",
            "required": false,
            "schema": {
              "type": "array",
              "maxItems": 100,
              "items": {
                "type": "string"
              }
            },
            "examples": {
              "SummaryCredential": {
                "description": "SummaryCredential",
                "value": "SummaryCredential"
              },
              "BpnCredential": {
                "description": "BpnCredential",
                "value": "BpnCredential"
              }
            }
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Sort column name",
            "required": false,
            "schema": {
              "type": "string",
              "default": "createdAt"
            },
            "examples": {
              "creation date": {
                "description": "creation date",
                "value": "createdAt"
              },
              "Self issued credential": {
                "description": "Self issued credential",
                "value": "selfIssued"
              },
              "Stored credential": {
                "description": "Stored credential",
                "value": "stored"
              },
              "Issuer did": {
                "description": "Issuer did",
                "value": "issuerDid"
              },
              "Credential type": {
                "description": "Credential type",
                "value": "type"
              },
              "Credential id": {
                "description": "Credential id",
                "value": "credentialId"
              }
            }
          },
          {
            "name": "sortTpe",
            "in": "query",
            "description": "Sort order",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc"
            },
            "examples": {
              "Ascending order": {
                "description": "Ascending order",
                "value": "asc"
              },
              "Descending order": {
                "description": "Descending order",
                "value": "desc"
              }
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, Page number start with zero",
            "required": false,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page",
            "required": false,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 2147483647
            }
          },
          {
            "name": "asJwt",
            "in": "query",
            "description": "Specifies whether the VC (Verifiable Credential) should be created as a JWT (JSON Web Token). If set to true, the VC will be generated in JWT formatSetting this parameter to false will result in the VC being created as JSON-LD Defaults to false if not specified.",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "examples": {
              "Create VC as JWT": {
                "description": "Create VC as JWT",
                "value": true
              },
              "Do not create VC as JWT": {
                "description": "Do not create VC as JWT",
                "value": false
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Credential list",
            "content": {
              "application/json": {
                "examples": {
                  "Credential list": {
                    "description": "Credential list",
                    "value": {
                      "content": [
                        {
                          "@context": [
                            "https://www.w3.org/2018/credentials/v1",
                            "https://catenax-ng.github.io/product-core-schemas/SummaryVC.json",
                            "https://w3id.org/security/suites/jws-2020/v1"
                          ],
                          "id": "did:web:localhost:BPNL000000000000#954d43de-ebed-481d-9e35-e3bbb311b8f5",
                          "type": [
                            "VerifiableCredential",
                            "SummaryCredential"
                          ],
                          "issuer": "did:web:localhost:BPNL000000000000",
                          "issuanceDate": "2023-07-14T11:05:48Z",
                          "expirationDate": "2023-09-30T18:30:00Z",
                          "credentialSubject": [
                            {
                              "contractTemplate": "https://public.catena-x.org/contracts/",
                              "holderIdentifier": "BPNL000000000000",
                              "id": "did:web:localhost:BPNL000000000000",
                              "items": [
                                "BpnCredential"
                              ],
                              "type": "SummaryCredential"
                            }
                          ],
                          "proof": {
                            "created": "2023-07-14T11:05:50Z",
                            "jws": "eyJhbGciOiJFZERTQSJ9..4xwFUCtP0xXVEo5_lXd90Vv-TWO2FijZut-HZ5cozAQseexj8EpTkK1erhFbf2Ua1kb8pi_H5At5HiPkTxSIAQ",
                            "proofPurpose": "proofPurpose",
                            "type": "JsonWebSignature2020",
                            "verificationMethod": "did:web:localhost:BPNL000000000000#"
                          }
                        }
                      ],
                      "pageable": {
                        "sort": {
                          "empty": false,
                          "sorted": true,
                          "unsorted": false
                        },
                        "offset": 0,
                        "pageNumber": 0,
                        "pageSize": 2147483647,
                        "paged": true,
                        "unpaged": false
                      },
                      "totalElements": 1,
                      "totalPages": 1,
                      "last": true,
                      "size": 2147483647,
                      "number": 0,
                      "sort": {
                        "empty": false,
                        "sorted": true,
                        "unsorted": false
                      },
                      "first": true,
                      "numberOfElements": 1,
                      "empty": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The input does not comply to the syntax requirements",
            "content": {
              "application/json": {
                "examples": {
                  "Response in case of invalid data provided": {
                    "description": "Response in case of invalid data provided",
                    "value": {
                      "type": "about:blank",
                      "title": "title",
                      "status": 400,
                      "detail": "details",
                      "instance": "API endpoint",
                      "properties": {
                        "timestamp": 1689760833962,
                        "errors": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The request could not be completed due to a failed authorization."
          },
          "403": {
            "description": "The request could not be completed due to a forbidden access"
          },
          "404": {
            "description": "Wallet not found with caller BPN",
            "content": {
              "application/json": {
                "examples": {
                  "Wallet not found with caller BPN": {
                    "description": "Wallet not found with caller BPN",
                    "value": {
                      "type": "about:blank",
                      "title": "Wallet not found for identifier did:web:localhost:BPNL0000000",
                      "status": 404,
                      "detail": "Wallet not found for identifier did:web:localhost:BPNL0000000",
                      "instance": "/api/wallets/did%3Aweb%3Alocalhost%3ABPNL0000000/credentials",
                      "properties": {
                        "timestamp": 1689765541959
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Any other internal server error",
            "content": {
              "application/json": {
                "examples": {
                  "Internal server error": {
                    "description": "Internal server error",
                    "value": {
                      "type": "about:blank",
                      "title": "Error Title",
                      "status": 500,
                      "detail": "Error Details",
                      "instance": "API endpoint",
                      "properties": {
                        "timestamp": 1689762476720
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authenticate using access_token": []
          }
        ]
      },
      "post": {
        "tags": [
          "Verifiable Credential - Holder"
        ],
        "summary": "Issue Verifiable Credential",
        "description": "Permission: **update_wallets** OR **update_wallet** (The BPN of the issuer of the Verifiable Credential must equal BPN of caller)\nIssue a verifiable credential with a given issuer DID",
        "operationId": "issueCredential",
        "parameters": [
          {
            "name": "asJwt",
            "in": "query",
            "description": "Specifies whether the VC (Verifiable Credential) should be created as a JWT (JSON Web Token). If set to true, the VC will be generated in JWT formatSetting this parameter to false will result in the VC being created as JSON-LD Defaults to false if not specified.",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "examples": {
              "Create VC as JWT": {
                "description": "Create VC as JWT",
                "value": true
              },
              "Do not create VC as JWT": {
                "description": "Do not create VC as JWT",
                "value": false
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              },
              "example": {
                "@context": [
                  "https://www.w3.org/2018/credentials/v1",
                  "https://catenax-ng.github.io/product-core-schemas/businessPartnerData.json",
                  "https://w3id.org/security/suites/jws-2020/v1"
                ],
                "id": "did:web:localhost:BPNL000000000000#f73e3631-ba87-4a03-bea3-b28700056879",
                "type": [
                  "VerifiableCredential",
                  "BankDetails"
                ],
                "issuer": "did:web:localhost:BPNL000000000000",
                "expirationDate": "2024-12-31T18:30:00Z",
                "issuanceDate": "2023-07-19T09:11:34Z",
                "credentialSubject": [
                  {
                    "bpn": "BPNL000000000000",
                    "id": "did:web:localhost:BPNL000000000000",
                    "type": "BankDetails",
                    "accountNumber": "123456789",
                    "bankName": "Dummy Bank"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "examples": {
                  "Success Response": {
                    "description": "Success Response",
                    "value": {
                      "@context": [
                        "https://www.w3.org/2018/credentials/v1",
                        "https://catenax-ng.github.io/product-core-schemas/businessPartnerData.json",
                        "https://w3id.org/security/suites/jws-2020/v1"
                      ],
                      "id": "did:web:localhost:BPNL000000000000#319a2641-9407-4c39-bf51-a4a109b59604",
                      "type": [
                        "VerifiableCredential",
                        "BankDetails"
                      ],
                      "issuer": "did:web:localhost:BPNL000000000000",
                      "issuanceDate": "2023-07-19T13:41:52Z",
                      "expirationDate": "2024-12-31T18:30:00Z",
                      "credentialSubject": [
                        {
                          "bpn": "BPNL000000000000",
                          "bankName": "Dummy Bank",
                          "id": "did:web:localhost:BPNL000000000000",
                          "type": "BankDetails",
                          "accountNumber": "123456789"
                        }
                      ],
                      "proof": {
                        "proofPurpose": "proofPurpose",
                        "verificationMethod": "did:web:localhost:BPNL000000000000#",
                        "type": "JsonWebSignature2020",
                        "created": "2023-07-19T13:41:54Z",
                        "jws": "eyJhbGciOiJFZERTQSJ9..fdqaAsPhQ5xZhQiRvWliDVXX-R9NzCvFXGUAOyQ8yE1hmf_4cvxS7JFuEojjsi3V-n66iiRCUFEXsnv56XPgDA"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The input does not comply to the syntax requirements",
            "content": {
              "application/json": {
                "examples": {
                  "Response in case of invalid data provided": {
                    "description": "Response in case of invalid data provided",
                    "value": {
                      "type": "about:blank",
                      "title": "Invalid data provided",
                      "status": 400,
                      "detail": "details",
                      "instance": "API endpoint",
                      "properties": {
                        "timestamp": 1689760833962,
                        "errors": {
                          "filed": "filed error message"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The request could not be completed due to a failed authorization."
          },
          "403": {
            "description": "The request could not be completed due to a forbidden access"
          },
          "404": {
            "description": "Wallet not found with caller BPN",
            "content": {
              "application/json": {
                "examples": {
                  "Wallet not found with caller BPN": {
                    "description": "Wallet not found with caller BPN",
                    "value": {
                      "type": "about:blank",
                      "title": "Wallet not found for identifier did:web:localhost:BPNL0000000501",
                      "status": 404,
                      "detail": "Wallet not found for identifier did:web:localhost:BPNL0000000501",
                      "instance": "/api/wallets/did%3Aweb%3Alocalhost%3ABPNL0000000501",
                      "properties": {
                        "timestamp": 1689764377224
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Any other internal server error",
            "content": {
              "application/json": {
                "examples": {
                  "Internal server error": {
                    "description": "Internal server error",
                    "value": {
                      "type": "about:blank",
                      "title": "Error Title",
                      "status": 500,
                      "detail": "Error Details",
                      "instance": "API endpoint",
                      "properties": {
                        "timestamp": 1689762476720
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authenticate using access_token": []
          }
        ]
      }
    },
    "/api/credentials/validation": {
      "post": {
        "tags": [
          "Verifiable Credential - Validation"
        ],
        "summary": "Validate Verifiable Credentials",
        "description": "Permission: **view_wallets** OR **view_wallet** \n\n Validate Verifiable Credentials",
        "operationId": "credentialsValidation",
        "parameters": [
          {
            "name": "withCredentialExpiryDate",
            "in": "query",
            "description": "Check expiry of VC",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CredentialVerificationRequest"
              },
              "examples": {
                "Validate credential in JSON-LD format": {
                  "description": "Validate credential in JSON-LD format",
                  "value": {
                    "@context": [
                      "https://www.w3.org/2018/credentials/v1",
                      "https://catenax-ng.github.io/product-core-schemas/businessPartnerData.json",
                      "https://w3id.org/security/suites/jws-2020/v1"
                    ],
                    "id": "did:web:localhost:BPNL000000000000#f73e3631-ba87-4a03-bea3-b28700056879",
                    "type": [
                      "VerifiableCredential",
                      "BpnCredential"
                    ],
                    "issuer": "did:web:localhost:BPNL000000000000",
                    "issuanceDate": "2023-07-19T09:11:34Z",
                    "expirationDate": "2024-12-31T18:30:00Z",
                    "credentialSubject": [
                      {
                        "bpn": "BPNL000000000000",
                        "id": "did:web:localhost:BPNL000000000000",
                        "type": "BpnCredential"
                      }
                    ],
                    "proof": {
                      "created": "2023-07-19T09:11:39Z",
                      "jws": "eyJhbGciOiJFZERTQSJ9..fdn2qU85auOltdHDLdHI7sJVV1ZPdftpiXd_ndXN0dFgSDWiIrScdD03wtvKLq_H-shQWfh2RYeMmrlEzAhfDw",
                      "proofPurpose": "proofPurpose",
                      "type": "JsonWebSignature2020",
                      "verificationMethod": "did:web:localhost:BPNL000000000000#"
                    }
                  }
                },
                "Validate credential in JWT format": {
                  "description": "Validate credential in JWT format",
                  "value": {
                    "jwt": "eyJraWQiOiJkaWQ6d2ViOmFmODgtMjAzLTEyOS0yMTMtMTA3Lm5ncm9rLWZyZWUuYXBwOkJQTkwwMDAwMDAwMDAwMDAjOGYyZWU5ZDItYTM2Yy00MTM4LWJlMWYtYjZmZWZiNmY4MDI0IiwidHlwIjoiSldUIiwiYWxnIjoiRWREU0EifQ.eyJpc3MiOiJkaWQ6d2ViOmFmODgtMjAzLTEyOS0yMTMtMTA3Lm5ncm9rLWZyZWUuYXBwOkJQTkwwMDAwMDAwMDAwMDAiLCJzdWIiOiJkaWQ6d2ViOmFmODgtMjAzLTEyOS0yMTMtMTA3Lm5ncm9rLWZyZWUuYXBwOkJQTkwwMDAwMDAwMDAwMTEiLCJleHAiOjE3MzU2Njk4MDAsInZjIjp7IkBjb250ZXh0IjpbImh0dHBzOi8vd3d3LnczLm9yZy8yMDE4L2NyZWRlbnRpYWxzL3YxIiwiaHR0cHM6Ly9jb2Zpbml0eS14LmdpdGh1Yi5pby9zY2hlbWEtcmVnaXN0cnkvdjEuMS9Vc2VDYXNlVkMuanNvbiIsImh0dHBzOi8vdzNpZC5vcmcvc2VjdXJpdHkvc3VpdGVzL2p3cy0yMDIwL3YxIl0sImlkIjoiZGlkOndlYjphZjg4LTIwMy0xMjktMjEzLTEwNy5uZ3Jvay1mcmVlLmFwcDpCUE5MMDAwMDAwMDAwMDAwI2Q4Y2ZjZDBiLWY0NGQtNDVkMC05OGEzLTA4ZDZkNmU5Y2E5NSIsInR5cGUiOlsiVmVyaWZpYWJsZUNyZWRlbnRpYWwiLCJVc2VDYXNlRnJhbWV3b3JrQ29uZGl0aW9uIl0sImlzc3VlciI6ImRpZDp3ZWI6YWY4OC0yMDMtMTI5LTIxMy0xMDcubmdyb2stZnJlZS5hcHA6QlBOTDAwMDAwMDAwMDAwMCIsImNyZWRlbnRpYWxTdWJqZWN0IjpbeyJob2xkZXJJZGVudGlmaWVyIjoiQlBOTDAwMDAwMDAwMDAxMSIsImlkIjoiZGlkOndlYjphZjg4LTIwMy0xMjktMjEzLTEwNy5uZ3Jvay1mcmVlLmFwcDpCUE5MMDAwMDAwMDAwMDExIiwidHlwZSI6IkJlaGF2aW9yVHdpbkNyZWRlbnRpYWwiLCJjb250cmFjdFRlbXBsYXRlIjoiaHR0cHM6Ly9wdWJsaWMuY2F0ZW5hLXgub3JnL2NvbnRyYWN0cy90cmFjZWFiaWx0eS52MS5wZGYiLCJjb250cmFjdFZlcnNpb24iOiIxLjAuMCJ9XSwiY3JlZGVudGlhbFN0YXR1cyI6bnVsbCwiaXNzdWFuY2VEYXRlIjoiMjAyNC0wMi0wOFQxNDowMjo1M1oiLCJleHBpcmF0aW9uRGF0ZSI6IjIwMjQtMTItMzFUMTg6MzA6MDBaIn0sImp0aSI6IjliYWFhMjIzLTAxMjctNDEyZS05NjZhLTA3ZTJmZGU4NGNlNCJ9.X3rkj8Gv4OD5nEaeFG5pSA-dogbcYA91YEPmHiKT4FhAiIr7QAdSEULGXHYOn8-eK0jSDHNdAxNYIK1UwYRsCA"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Validate Verifiable Credentials",
            "content": {
              "application/json": {
                "examples": {
                  "Verifiable Credentials without check expiry": {
                    "description": "Verifiable Credentials without check expiry",
                    "value": {
                      "valid": true,
                      "vc": {
                        "issuanceDate": "2023-07-19T09:11:34Z",
                        "credentialSubject": [
                          {
                            "bpn": "BPNL000000000000",
                            "id": "did:web:localhost:BPNL000000000000",
                            "type": "BpnCredential"
                          }
                        ],
                        "id": "did:web:localhost:BPNL000000000000#f73e3631-ba87-4a03-bea3-b28700056879",
                        "proof": {
                          "created": "2023-07-19T09:11:39Z",
                          "jws": "eyJhbGciOiJFZERTQSJ9..fdn2qU85auOltdHDLdHI7sJVV1ZPdftpiXd_ndXN0dFgSDWiIrScdD03wtvKLq_H-shQWfh2RYeMmrlEzAhfDw",
                          "proofPurpose": "proofPurpose",
                          "type": "JsonWebSignature2020",
                          "verificationMethod": "did:web:localhost:BPNL000000000000#"
                        },
                        "type": [
                          "VerifiableCredential",
                          "BpnCredential"
                        ],
                        "@context": [
                          "https://www.w3.org/2018/credentials/v1",
                          "https://catenax-ng.github.io/product-core-schemas/businessPartnerData.json",
                          "https://w3id.org/security/suites/jws-2020/v1"
                        ],
                        "issuer": "did:web:localhost:BPNL000000000000",
                        "expirationDate": "2024-12-31T18:30:00Z"
                      }
                    }
                  },
                  "Verifiable Credentials with check expiry": {
                    "description": "Verifiable Credentials with check expiry",
                    "value": {
                      "valid": true,
                      "validateExpiryDate": true,
                      "vc": {
                        "issuanceDate": "2023-07-19T09:11:34Z",
                        "credentialSubject": [
                          {
                            "bpn": "BPNL000000000000",
                            "id": "did:web:localhost:BPNL000000000000",
                            "type": "BpnCredential"
                          }
                        ],
                        "id": "did:web:localhost:BPNL000000000000#f73e3631-ba87-4a03-bea3-b28700056879",
                        "proof": {
                          "created": "2023-07-19T09:11:39Z",
                          "jws": "eyJhbGciOiJFZERTQSJ9..fdn2qU85auOltdHDLdHI7sJVV1ZPdftpiXd_ndXN0dFgSDWiIrScdD03wtvKLq_H-shQWfh2RYeMmrlEzAhfDw",
                          "proofPurpose": "proofPurpose",
                          "type": "JsonWebSignature2020",
                          "verificationMethod": "did:web:localhost:BPNL000000000000#"
                        },
                        "type": [
                          "VerifiableCredential",
                          "BpnCredential"
                        ],
                        "@context": [
                          "https://www.w3.org/2018/credentials/v1",
                          "https://catenax-ng.github.io/product-core-schemas/businessPartnerData.json",
                          "https://w3id.org/security/suites/jws-2020/v1"
                        ],
                        "issuer": "did:web:localhost:BPNL000000000000",
                        "expirationDate": "2024-12-31T18:30:00Z"
                      }
                    }
                  },
                  "Verifiable expired credentials with check expiry ": {
                    "description": "Verifiable expired credentials with check expiry ",
                    "value": {
                      "valid": false,
                      "validateExpiryDate": false,
                      "vc": {
                        "issuanceDate": "2023-07-19T09:11:34Z",
                        "credentialSubject": [
                          {
                            "bpn": "BPNL000000000000",
                            "id": "did:web:localhost:BPNL000000000000",
                            "type": "BpnCredential"
                          }
                        ],
                        "id": "did:web:localhost:BPNL000000000000#f73e3631-ba87-4a03-bea3-b28700056879",
                        "proof": {
                          "created": "2023-07-19T09:11:39Z",
                          "jws": "eyJhbGciOiJFZERTQSJ9..fdn2qU85auOltdHDLdHI7sJVV1ZPdftpiXd_ndXN0dFgSDWiIrScdD03wtvKLq_H-shQWfh2RYeMmrlEzAhfDw",
                          "proofPurpose": "proofPurpose",
                          "type": "JsonWebSignature2020",
                          "verificationMethod": "did:web:localhost:BPNL000000000000#"
                        },
                        "type": [
                          "VerifiableCredential",
                          "BpnCredential"
                        ],
                        "@context": [
                          "https://www.w3.org/2018/credentials/v1",
                          "https://catenax-ng.github.io/product-core-schemas/businessPartnerData.json",
                          "https://w3id.org/security/suites/jws-2020/v1"
                        ],
                        "issuer": "did:web:localhost:BPNL000000000000",
                        "expirationDate": "2022-12-31T18:30:00Z"
                      }
                    }
                  },
                  "Revocable Verifiable credentials with check expiry ": {
                    "description": "Revocable Verifiable credentials with check expiry ",
                    "value": {
                      "credentialStatus": "active",
                      "valid": true,
                      "validateExpiryDate": true,
                      "vc": {
                        "credentialSubject": [
                          {
                            "holderIdentifier": "BPNL000000000001",
                            "allowedVehicleBrands": [
                              "Audi",
                              "Abarth",
                              "Alfa Romeo",
                              "Chrysler"
                            ],
                            "id": "did:web:6e3e-203-129-213-107.ngrok-free.app:BPNL000000000001",
                            "activityType": "vehicleDismantle",
                            "type": "DismantlerCredential"
                          }
                        ],
                        "issuanceDate": "2024-01-05T05:42:53Z",
                        "id": "did:web:6e3e-203-129-213-107.ngrok-free.app:BPNL000000000000#8507aa50-b2a4-4532-8e45-f50e7654b23b",
                        "proof": {
                          "proofPurpose": "assertionMethod",
                          "verificationMethod": "did:web:6e3e-203-129-213-107.ngrok-free.app:BPNL000000000000#a39d8ccf-2a66-488d-bfec-916768082e91",
                          "type": "JsonWebSignature2020",
                          "created": "2024-01-05T05:42:53Z",
                          "jws": "eyJhbGciOiJFZERTQSJ9..15NdxA8L_Iw7Igxevm7YGMAQA-Kt6PMOpix6p0jaYHCtfQnTy3q61SDvsnsltGT6fzM90JOubOuig2WFy-GPDg"
                        },
                        "type": [
                          "VerifiableCredential",
                          "DismantlerCredential"
                        ],
                        "@context": [
                          "https://www.w3.org/2018/credentials/v1",
                          "https://eclipse=tractusx.github.io/schema-registry/v1.1/DismantlerVC.json",
                          "https://w3id.org/security/suites/jws-2020/v1",
                          "https://w3id.org/vc/status-list/2021/v1"
                        ],
                        "issuer": "did:web:6e3e-203-129-213-107.ngrok-free.app:BPNL000000000000",
                        "credentialStatus": {
                          "id": "did:web:6e3e-203-129-213-107.ngrok-free.app:BPNL000000000000#0",
                          "statusPurpose": "revocation",
                          "statusListIndex": "0",
                          "statusListCredential": "https://ae96-203-129-213-107.ngrok-free.app/api/v1/revocations/credentials?issuerId=did:web:6e3e-203-129-213-107.ngrok-free.app:BPNL000000000000",
                          "type": "StatusList2021Entry"
                        },
                        "expirationDate": "2024-12-31T18:30:00Z"
                      }
                    }
                  },
                  "Verifiable Credentials with invalid signature": {
                    "description": "Verifiable Credentials with invalid signature",
                    "value": {
                      "valid": false,
                      "vc": {
                        "@context": [
                          "https://www.w3.org/2018/credentials/v1",
                          "https://catenax-ng.github.io/product-core-schemas/businessPartnerData.json",
                          "https://w3id.org/security/suites/jws-2020/v1"
                        ],
                        "id": "did:web:localhost:BPNL000000000000#f73e3631-ba87-4a03-bea3-b28700056879",
                        "type": [
                          "VerifiableCredential",
                          "BpnCredential"
                        ],
                        "issuer": "did:web:localhost:BPNL000000000000",
                        "expirationDate": "2024-12-31T18:30:00Z",
                        "issuanceDate": "2023-07-19T09:11:34Z",
                        "credentialSubject": [
                          {
                            "bpn": "BPNL000000000000",
                            "id": "did:web:localhost:BPNL000000000000",
                            "type": "BpnCredential"
                          }
                        ],
                        "proof": {
                          "created": "2023-07-19T09:11:39Z",
                          "jws": "eyJhbGciOiJFZERTQSJ9..fdn2qU85auOltdHDLdHI7sJVV1ZPdftpiXd_ndXN0dFgSDWiIrScdD03wtvKLq_H-shQWfh2RYeMmrlEzAhf",
                          "proofPurpose": "proofPurpose",
                          "type": "JsonWebSignature2020",
                          "verificationMethod": "did:web:localhost:BPNL000000000000#"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The request could not be completed due to a failed authorization."
          },
          "403": {
            "description": "The request could not be completed due to a forbidden access"
          },
          "500": {
            "description": "Any other internal server error",
            "content": {
              "application/json": {
                "examples": {
                  "Internal server error": {
                    "description": "Internal server error",
                    "value": {
                      "type": "about:blank",
                      "title": "Error Title",
                      "status": 500,
                      "detail": "Error Details",
                      "instance": "API endpoint",
                      "properties": {
                        "timestamp": 1689762476720
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authenticate using access_token": []
          }
        ]
      }
    },
    "/api/credentials/issuer": {
      "get": {
        "tags": [
          "Verifiable Credential - Issuer"
        ],
        "summary": "Query Verifiable Credentials",
        "description": "Permission: **view_wallets** (The BPN of holderIdentifier must equal BPN of caller)\n\n Search verifiable credentials with filter criteria",
        "operationId": "getCredentials_1",
        "parameters": [
          {
            "name": "credentialId",
            "in": "query",
            "description": "Credential Id",
            "required": false,
            "schema": {
              "type": "string"
            },
            "examples": {
              "Credential Id": {
                "description": "Credential Id",
                "value": "did:web:localhost:BPNL000000000000#12528899-160a-48bd-ba15-f396c3959ae9"
              }
            }
          },
          {
            "name": "holderIdentifier",
            "in": "query",
            "description": "Holder identifier(did of BPN)",
            "required": false,
            "schema": {
              "type": "string"
            },
            "examples": {
              "bpn": {
                "description": "bpn",
                "value": "BPNL000000000001"
              },
              "did": {
                "description": "did",
                "value": "did:web:localhost:BPNL000000000001"
              }
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type of VC",
            "required": false,
            "schema": {
              "type": "array",
              "maxItems": 100,
              "items": {
                "type": "string"
              }
            },
            "examples": {
              "SummaryCredential": {
                "description": "SummaryCredential",
                "value": "SummaryCredential"
              },
              "BpnCredential": {
                "description": "BpnCredential",
                "value": "BpnCredential"
              }
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number, Page number start with zero",
            "required": false,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page",
            "required": false,
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 2147483647
            }
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Sort column name",
            "required": false,
            "schema": {
              "type": "string",
              "default": "createdAt"
            },
            "examples": {
              "creation date": {
                "description": "creation date",
                "value": "createdAt"
              },
              "Holder did": {
                "description": "Holder did",
                "value": "holderDid"
              },
              "Credential type": {
                "description": "Credential type",
                "value": "type"
              },
              "Credential id": {
                "description": "Credential id",
                "value": "credentialId"
              }
            }
          },
          {
            "name": "sortTpe",
            "in": "query",
            "description": "Sort order",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc"
            },
            "examples": {
              "Ascending order": {
                "description": "Ascending order",
                "value": "asc"
              },
              "Descending order": {
                "description": "Descending order",
                "value": "desc"
              }
            }
          },
          {
            "name": "asJwt",
            "in": "query",
            "description": "Specifies whether the VC (Verifiable Credential) should be created as a JWT (JSON Web Token). If set to true, the VC will be generated in JWT formatSetting this parameter to false will result in the VC being created as JSON-LD Defaults to false if not specified.",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "examples": {
              "Create VC as JWT": {
                "description": "Create VC as JWT",
                "value": true
              },
              "Do not create VC as JWT": {
                "description": "Do not create VC as JWT",
                "value": false
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Issuer credential list",
            "content": {
              "application/json": {
                "examples": {
                  "Issuer credential list": {
                    "description": "Issuer credential list",
                    "value": {
                      "content": [
                        {
                          "@context": [
                            "https://www.w3.org/2018/credentials/v1",
                            "https://catenax-ng.github.io/product-core-schemas/businessPartnerData.json",
                            "https://w3id.org/security/suites/jws-2020/v1"
                          ],
                          "id": "did:web:localhost:BPNL000000000000#ae364f71-f054-4d91-b579-f001bcb3e59e",
                          "type": [
                            "VerifiableCredential",
                            "BpnCredential"
                          ],
                          "issuer": "did:web:localhost:BPNL000000000000",
                          "issuanceDate": "2023-07-19T09:27:42Z",
                          "expirationDate": "2024-12-31T18:30:00Z",
                          "credentialSubject": [
                            {
                              "bpn": "BPNL000000000000",
                              "id": "did:web:localhost:BPNL000000000000",
                              "type": "BpnCredential"
                            }
                          ],
                          "proof": {
                            "created": "2023-07-19T09:27:44Z",
                            "jws": "eyJhbGciOiJFZERTQSJ9..evDHQfW4EzJUt2HnS_WlmO8FFtywTGnwyywtCE7WP41my4Iscpqr4tbuVOqnZg85b4U8L3_ut8_pEONIhbExCQ",
                            "proofPurpose": "proofPurpose",
                            "type": "JsonWebSignature2020",
                            "verificationMethod": "did:web:localhost:BPNL000000000000#"
                          }
                        },
                        {
                          "type": [
                            "VerifiableCredential",
                            "SummaryCredential"
                          ],
                          "@context": [
                            "https://www.w3.org/2018/credentials/v1",
                            "https://catenax-ng.github.io/product-core-schemas/SummaryVC.json",
                            "https://w3id.org/security/suites/jws-2020/v1"
                          ],
                          "issuer": "did:web:localhost:BPNL000000000000",
                          "issuanceDate": "2023-07-19T09:11:39Z",
                          "expirationDate": "2024-12-31T18:30:00Z",
                          "credentialSubject": [
                            {
                              "contractTemplate": "https://public.catena-x.org/contracts/",
                              "holderIdentifier": "BPNL000000000000",
                              "id": "did:web:localhost:BPNL000000000000",
                              "items": [
                                "BpnCredential"
                              ],
                              "type": "SummaryCredential"
                            }
                          ],
                          "proof": {
                            "created": "2023-07-19T09:11:41Z",
                            "jws": "eyJhbGciOiJFZERTQSJ9..YvoFhDip3TQAfZUIu0yc843oA4uGTg049dMFt_GoaMmPjiNB_B1EFOL-gDpwjIxTYNlGOO_CLp9qStbzlDTNBg",
                            "proofPurpose": "proofPurpose",
                            "type": "JsonWebSignature2020",
                            "verificationMethod": "did:web:localhost:BPNL000000000000#"
                          }
                        },
                        {
                          "@context": [
                            "https://www.w3.org/2018/credentials/v1",
                            "https://catenax-ng.github.io/product-core-schemas/businessPartnerData.json",
                            "https://w3id.org/security/suites/jws-2020/v1"
                          ],
                          "id": "did:web:localhost:BPNL000000000000#f73e3631-ba87-4a03-bea3-b28700056879",
                          "type": [
                            "VerifiableCredential",
                            "BpnCredential"
                          ],
                          "issuer": "did:web:localhost:BPNL000000000000",
                          "issuanceDate": "2023-07-19T09:11:34Z",
                          "expirationDate": "2024-12-31T18:30:00Z",
                          "credentialSubject": [
                            {
                              "bpn": "BPNL000000000000",
                              "id": "did:web:localhost:BPNL000000000000",
                              "type": "BpnCredential"
                            }
                          ],
                          "proof": {
                            "created": "2023-07-19T09:11:39Z",
                            "jws": "eyJhbGciOiJFZERTQSJ9..fdn2qU85auOltdHDLdHI7sJVV1ZPdftpiXd_ndXN0dFgSDWiIrScdD03wtvKLq_H-shQWfh2RYeMmrlEzAhfDw",
                            "proofPurpose": "proofPurpose",
                            "type": "JsonWebSignature2020",
                            "verificationMethod": "did:web:localhost:BPNL000000000000#"
                          }
                        }
                      ],
                      "pageable": {
                        "sort": {
                          "empty": false,
                          "unsorted": false,
                          "sorted": true
                        },
                        "offset": 0,
                        "pageNumber": 0,
                        "pageSize": 2147483647,
                        "paged": true,
                        "unpaged": false
                      },
                      "last": true,
                      "totalPages": 1,
                      "totalElements": 3,
                      "first": true,
                      "size": 2147483647,
                      "number": 0,
                      "sort": {
                        "empty": false,
                        "unsorted": false,
                        "sorted": true
                      },
                      "numberOfElements": 3,
                      "empty": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The input does not comply to the syntax requirements",
            "content": {
              "application/json": {
                "examples": {
                  "Response in case of invalid data provided": {
                    "description": "Response in case of invalid data provided",
                    "value": {
                      "type": "about:blank",
                      "title": "title",
                      "status": 400,
                      "detail": "details",
                      "instance": "API endpoint",
                      "properties": {
                        "timestamp": 1689760833962,
                        "errors": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The request could not be completed due to a failed authorization."
          },
          "403": {
            "description": "The request could not be completed due to a forbidden access"
          },
          "500": {
            "description": "Any other internal server error",
            "content": {
              "application/json": {
                "examples": {
                  "Internal server error": {
                    "description": "Internal server error",
                    "value": {
                      "type": "about:blank",
                      "title": "Error Title",
                      "status": 500,
                      "detail": "Error Details",
                      "instance": "API endpoint",
                      "properties": {
                        "timestamp": 1689762476720
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authenticate using access_token": []
          }
        ]
      },
      "post": {
        "tags": [
          "Verifiable Credential - Issuer"
        ],
        "summary": "Issue Verifiable Credential",
        "description": "Permission: **update_wallets** (The BPN of the base wallet must equal BPN of caller)\nIssue a verifiable credential with a given issuer DID",
        "operationId": "issueCredentialUsingBaseWallet",
        "parameters": [
          {
            "name": "holderDid",
            "in": "query",
            "description": "Holder DID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "did": {
                "description": "did",
                "value": "did:web:localhost:BPNL000000000000"
              }
            }
          },
          {
            "name": "asJwt",
            "in": "query",
            "description": "Specifies whether the VC (Verifiable Credential) should be created as a JWT (JSON Web Token). If set to true, the VC will be generated in JWT formatSetting this parameter to false will result in the VC being created as JSON-LD Defaults to false if not specified.",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "examples": {
              "Create VC as JWT": {
                "description": "Create VC as JWT",
                "value": true
              },
              "Do not create VC as JWT": {
                "description": "Do not create VC as JWT",
                "value": false
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              },
              "example": {
                "@context": [
                  "https://www.w3.org/2018/credentials/v1",
                  "https://catenax-ng.github.io/product-core-schemas/businessPartnerData.json",
                  "https://w3id.org/security/suites/jws-2020/v1"
                ],
                "id": "did:web:localhost:BPNL000000000000#f73e3631-ba87-4a03-bea3-b28700056879",
                "type": [
                  "VerifiableCredential",
                  "BpnCredential"
                ],
                "issuer": "did:web:localhost:BPNL000000000000",
                "issuanceDate": "2023-07-19T09:11:34Z",
                "expirationDate": "2024-12-31T18:30:00Z",
                "credentialSubject": [
                  {
                    "bpn": "BPNL000000000000",
                    "id": "did:web:localhost:BPNL000000000000",
                    "type": "BpnCredential"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Issuer credential",
            "content": {
              "application/json": {
                "examples": {
                  "Issuer credential": {
                    "description": "Issuer credential",
                    "value": {
                      "@context": [
                        "https://www.w3.org/2018/credentials/v1",
                        "https://catenax-ng.github.io/product-core-schemas/businessPartnerData.json",
                        "https://w3id.org/security/suites/jws-2020/v1"
                      ],
                      "id": "did:web:localhost:BPNL000000000000#ff084e7a-1b46-4a2f-a78d-3d701a0bd6e4",
                      "type": [
                        "VerifiableCredential",
                        "BpnCredential"
                      ],
                      "issuer": "did:web:localhost:BPNL000000000000",
                      "issuanceDate": "2023-07-19T12:18:30Z",
                      "expirationDate": "2024-12-31T18:30:00Z",
                      "credentialSubject": [
                        {
                          "bpn": "BPNL000000000000",
                          "id": "did:web:localhost:BPNL000000000000",
                          "type": "BpnCredential"
                        }
                      ],
                      "proof": {
                        "proofPurpose": "proofPurpose",
                        "type": "JsonWebSignature2020",
                        "verificationMethod": "did:web:localhost:BPNL000000000000#",
                        "created": "2023-07-19T12:18:34Z",
                        "jws": "eyJhbGciOiJFZERTQSJ9..0Ua1vcTQAYwQY3PPuHr4RQxqW6iIngrHQQx1oPgk2uzqUpcbfY2YUxXAnbNA333-lSuvNhiV_1NLfBnCEcI2DQ"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The input does not comply to the syntax requirements",
            "content": {
              "application/json": {
                "examples": {
                  "Response in case of invalid data provided": {
                    "description": "Response in case of invalid data provided",
                    "value": {
                      "type": "about:blank",
                      "title": "Invalid data provided",
                      "status": 400,
                      "detail": "details",
                      "instance": "API endpoint",
                      "properties": {
                        "timestamp": 1689760833962,
                        "errors": {
                          "filed": "filed error message"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The request could not be completed due to a failed authorization."
          },
          "403": {
            "description": "The request could not be completed due to a forbidden access"
          },
          "404": {
            "description": "Wallet not found with provided identifier",
            "content": {
              "application/json": {
                "examples": {
                  "Wallet not found with provided identifier": {
                    "description": "Wallet not found with provided identifier",
                    "value": {
                      "type": "about:blank",
                      "title": "Error Title",
                      "status": 404,
                      "detail": "Error Details",
                      "instance": "API endpoint",
                      "properties": {
                        "timestamp": 1689762476720
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Any other internal server error",
            "content": {
              "application/json": {
                "examples": {
                  "Internal server error": {
                    "description": "Internal server error",
                    "value": {
                      "type": "about:blank",
                      "title": "Error Title",
                      "status": 500,
                      "detail": "Error Details",
                      "instance": "API endpoint",
                      "properties": {
                        "timestamp": 1689762476720
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authenticate using access_token": []
          }
        ]
      }
    },
    "/{bpn}/did.json": {
      "get": {
        "tags": [
          "DIDDocument"
        ],
        "summary": "Resolve DID Document",
        "description": "Resolve the DID document for a given BPN",
        "operationId": "getDidResolve",
        "parameters": [
          {
            "name": "bpn",
            "in": "path",
            "description": "BPN",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "bpn": {
                "description": "bpn",
                "value": "BPNL000000000000"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "DID document",
            "content": {
              "application/json": {
                "examples": {
                  " DID document": {
                    "description": " DID document",
                    "value": {
                      "@context": [
                        "https://www.w3.org/ns/did/v1",
                        "https://w3c.github.io/vc-jws-2020/contexts/v1"
                      ],
                      "id": "did:web:localhost:BPNL000000000000",
                      "verificationMethod": [
                        {
                          "controller": "did:web:localhost:BPNL000000000000",
                          "id": "did:web:localhost:BPNL000000000000",
                          "publicKeyJwk": {
                            "crv": "Ed25519",
                            "kty": "OKP",
                            "x": "wAOQvr92L1m7RwrpeOrgWByVYvWmhRr4fJbiMwHEIdY"
                          },
                          "type": "JsonWebKey2020"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Wallet not found with provided bpn",
            "content": {
              "application/json": {
                "examples": {
                  "Wallet not found with provided bpn": {
                    "description": "Wallet not found with provided bpn",
                    "value": {
                      "type": "about:blank",
                      "title": "Wallet not found for identifier BPNL00000000000",
                      "status": 404,
                      "detail": "Wallet not found for identifier BPNL00000000000",
                      "instance": "/BPNL00000000000/did.json",
                      "properties": {
                        "timestamp": 1689767698010
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Any other internal server error",
            "content": {
              "application/json": {
                "examples": {
                  "Internal server error": {
                    "description": "Internal server error",
                    "value": {
                      "type": "about:blank",
                      "title": "Error Title",
                      "status": 500,
                      "detail": "Error Details",
                      "instance": "API endpoint",
                      "properties": {
                        "timestamp": 1689762476720
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authenticate using access_token": []
          }
        ]
      }
    },
    "/api/wallets/{identifier}": {
      "get": {
        "tags": [
          "Wallets"
        ],
        "summary": "Retrieve wallet by BPN",
        "description": "Permission: **view_wallets** OR **view_wallet** (The BPN of Wallet to retrieve must equal the BPN of caller or Base wallet, authority wallet can see all wallets) \n\n Retrieve single wallet by identifier, with or without its credentials",
        "operationId": "getWalletByIdentifier",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "Did or BPN",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "bpn": {
                "description": "bpn",
                "value": "BPNL000000000000"
              },
              "did": {
                "description": "did",
                "value": "did:web:localhost:BPNL000000000000"
              }
            }
          },
          {
            "name": "withCredentials",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Wallet Details",
            "content": {
              "application/json": {
                "examples": {
                  "Wallet details without with credentials false": {
                    "description": "Wallet details without with credentials false",
                    "value": {
                      "name": "companyA",
                      "did": "did:web:localhost:BPNL000000000001",
                      "bpn": "BPNL000000000001",
                      "algorithm": "ED25519",
                      "didDocument": {
                        "@context": [
                          "https://www.w3.org/ns/did/v1",
                          "https://w3c.github.io/vc-jws-2020/contexts/v1"
                        ],
                        "id": "did:web:localhost:BPNL000000000001",
                        "verificationMethod": [
                          {
                            "controller": "did:web:localhost:BPNL000000000001",
                            "id": "did:web:localhost:BPNL000000000001#",
                            "publicKeyJwk": {
                              "crv": "Ed25519",
                              "kty": "OKP",
                              "x": "mhph0ZSVk7cDVmazbaaC3jBDpphW4eNygAK9gHPlMow"
                            },
                            "type": "JsonWebKey2020"
                          }
                        ]
                      }
                    }
                  },
                  "Wallet details without with credentials true": {
                    "description": "Wallet details without with credentials true",
                    "value": {
                      "name": "companyA",
                      "did": "did:web:localhost:BPNL000000000001",
                      "bpn": "BPNL000000000001",
                      "algorithm": "ED25519",
                      "didDocument": {
                        "@context": [
                          "https://www.w3.org/ns/did/v1",
                          "https://w3c.github.io/vc-jws-2020/contexts/v1"
                        ],
                        "id": "did:web:localhost:BPNL000000000001",
                        "verificationMethod": [
                          {
                            "controller": "did:web:localhost:BPNL000000000001",
                            "id": "did:web:localhost:BPNL000000000001#",
                            "publicKeyJwk": {
                              "crv": "Ed25519",
                              "kty": "OKP",
                              "x": "mhph0ZSVk7cDVmazbaaC3jBDpphW4eNygAK9gHPlMow"
                            },
                            "type": "JsonWebKey2020"
                          }
                        ]
                      },
                      "verifiableCredentials": [
                        {
                          "@context": [
                            "https://www.w3.org/2018/credentials/v1",
                            "https://catenax-ng.github.io/product-core-schemas/businessPartnerData.json",
                            "https://w3id.org/security/suites/jws-2020/v1"
                          ],
                          "id": "did:web:localhost:BPNL000000000000#a1f8ae36-9919-4ed8-8546-535280acc5bf",
                          "type": [
                            "VerifiableCredential",
                            "BpnCredential"
                          ],
                          "issuer": "did:web:localhost:BPNL000000000000",
                          "issuanceDate": "2023-07-19T09:14:45Z",
                          "expirationDate": "2023-09-30T18:30:00Z",
                          "credentialSubject": [
                            {
                              "bpn": "BPNL000000000001",
                              "id": "did:web:localhost:BPNL000000000001",
                              "type": "BpnCredential"
                            }
                          ],
                          "proof": {
                            "created": "2023-07-19T09:14:47Z",
                            "jws": "eyJhbGciOiJFZERTQSJ9..O69dLGMDVgZQJ7chFx3aUbkJFvibH8WWunw634rIDC77_pdiUHvQpQ0hq15_7OgFMy3dp-9H-pNgxTZ-i4UXCw",
                            "proofPurpose": "proofPurpose",
                            "type": "JsonWebSignature2020",
                            "verificationMethod": "did:web:localhost:BPNL000000000000#"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The input does not comply to the syntax requirements",
            "content": {
              "application/json": {
                "examples": {
                  "Response in case of invalid data provided": {
                    "description": "Response in case of invalid data provided",
                    "value": {
                      "type": "about:blank",
                      "title": "title",
                      "status": 400,
                      "detail": "details",
                      "instance": "API endpoint",
                      "properties": {
                        "timestamp": 1689760833962,
                        "errors": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The request could not be completed due to a failed authorization."
          },
          "403": {
            "description": "The request could not be completed due to a forbidden access"
          },
          "404": {
            "description": "Wallet not found with provided identifier",
            "content": {
              "application/json": {
                "examples": {
                  "Wallet not found with provided identifier": {
                    "description": "Wallet not found with provided identifier",
                    "value": {
                      "type": "about:blank",
                      "title": "Wallet not found for identifier did:web:localhost:BPNL0000000501",
                      "status": 404,
                      "detail": "Wallet not found for identifier did:web:localhost:BPNL0000000501",
                      "instance": "/api/wallets/did%3Aweb%3Alocalhost%3ABPNL0000000501",
                      "properties": {
                        "timestamp": 1689764377224
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Any other internal server error",
            "content": {
              "application/json": {
                "examples": {
                  "Internal server error": {
                    "description": "Internal server error",
                    "value": {
                      "type": "about:blank",
                      "title": "Error Title",
                      "status": 500,
                      "detail": "Error Details",
                      "instance": "API endpoint",
                      "properties": {
                        "timestamp": 1689762476720
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authenticate using access_token": []
          }
        ]
      }
    },
    "/api/presentations/iatp": {
      "get": {
        "tags": [
          "Verifiable Presentations - Generation"
        ],
        "summary": "Create Verifiable Presentation",
        "description": "Create a verifiable presentation for the verifiable credential types listed in STS token",
        "operationId": "createPresentation_1",
        "parameters": [
          {
            "name": "asJwt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Verifiable Presentation",
            "content": {
              "application/json": {
                "examples": {
                  "VP as Json-LD": {
                    "description": "VP as Json-LD",
                    "value": {
                      "vp": {
                        "@context": [
                          "https://www.w3.org/2018/credentials/v1"
                        ],
                        "id": "did:web:localhost:BPNL000000000000#b2e69e47-95f3-48ff-af30-eaaab36431d5",
                        "type": [
                          "VerifiablePresentation"
                        ],
                        "verifiableCredential": [
                          {
                            "id": "did:web:localhost:BPNL000000000000#f73e3631-ba87-4a03-bea3-b28700056879",
                            "@context": [
                              "https://www.w3.org/2018/credentials/v1",
                              "https://catenax-ng.github.io/product-core-schemas/businessPartnerData.json",
                              "https://w3id.org/security/suites/jws-2020/v1"
                            ],
                            "type": [
                              "VerifiableCredential",
                              "BpnCredential"
                            ],
                            "issuer": "did:web:localhost:BPNL000000000000",
                            "expirationDate": "2024-12-31T18:30:00Z",
                            "issuanceDate": "2023-07-19T09:11:34Z",
                            "credentialSubject": [
                              {
                                "bpn": "BPNL000000000000",
                                "id": "did:web:localhost:BPNL000000000000",
                                "type": "BpnCredential"
                              }
                            ],
                            "proof": {
                              "created": "2023-07-19T09:11:39Z",
                              "jws": "eyJhbGciOiJFZERTQSJ9..fdn2qU85auOltdHDLdHI7sJVV1ZPdftpiXd_ndXN0dFgSDWiIrScdD03wtvKLq_H-shQWfh2RYeMmrlEzAhfDw",
                              "proofPurpose": "proofPurpose",
                              "type": "JsonWebSignature2020",
                              "verificationMethod": "did:web:localhost:BPNL000000000000#"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "VP as JWT": {
                    "description": "VP as JWT",
                    "value": {
                      "vp": "eyJraWQiOiJkaWQ6d2ViOmxvY2FsaG9zdDpCUE5MMDAwMDAwMDAwMDAwIiwidHlwIjoiSldUIiwiYWxnIjoiRWREU0EifQ.eyJzdWIiOiJkaWQ6d2ViOmxvY2FsaG9zdDpCUE5MMDAwMDAwMDAwMDAwIiwiYXVkIjoic21hcnQiLCJpc3MiOiJkaWQ6d2ViOmxvY2FsaG9zdDpCUE5MMDAwMDAwMDAwMDAwIiwidnAiOnsiaWQiOiJkaWQ6d2ViOmxvY2FsaG9zdDpCUE5MMDAwMDAwMDAwMDAwIzM4ZTU2ZTg1LTNkODQtNGEyNS1iZjg1LWFiMjRlYzY4MmMwOSIsInR5cGUiOlsiVmVyaWZpYWJsZVByZXNlbnRhdGlvbiJdLCJAY29udGV4dCI6WyJodHRwczovL3d3dy53My5vcmcvMjAxOC9jcmVkZW50aWFscy92MSJdLCJ2ZXJpZmlhYmxlQ3JlZGVudGlhbCI6eyJAY29udGV4dCI6WyJodHRwczovL3d3dy53My5vcmcvMjAxOC9jcmVkZW50aWFscy92MSIsImh0dHBzOi8vY2F0ZW5heC1uZy5naXRodWIuaW8vcHJvZHVjdC1jb3JlLXNjaGVtYXMvYnVzaW5lc3NQYXJ0bmVyRGF0YS5qc29uIiwiaHR0cHM6Ly93M2lkLm9yZy9zZWN1cml0eS9zdWl0ZXMvandzLTIwMjAvdjEiXSwidHlwZSI6WyJWZXJpZmlhYmxlQ3JlZGVudGlhbCIsIkJwbkNyZWRlbnRpYWwiXSwiaWQiOiJkaWQ6d2ViOmxvY2FsaG9zdDpCUE5MMDAwMDAwMDAwMDAwI2Y3M2UzNjMxLWJhODctNGEwMy1iZWEzLWIyODcwMDA1Njg3OSIsImlzc3VlciI6ImRpZDp3ZWI6bG9jYWxob3N0OkJQTkwwMDAwMDAwMDAwMDAiLCJpc3N1YW5jZURhdGUiOiIyMDIzLTA3LTE5VDA5OjExOjM0WiIsImV4cGlyYXRpb25EYXRlIjoiMjAyNC0xMi0zMVQxODozMDowMFoiLCJjcmVkZW50aWFsU3ViamVjdCI6eyJpZCI6ImRpZDp3ZWI6bG9jYWxob3N0OkJQTkwwMDAwMDAwMDAwMDAiLCJicG4iOiJCUE5MMDAwMDAwMDAwMDAwIiwidHlwZSI6IkJwbkNyZWRlbnRpYWwifSwicHJvb2YiOnsicHJvb2ZQdXJwb3NlIjoicHJvb2ZQdXJwb3NlIiwidHlwZSI6Ikpzb25XZWJTaWduYXR1cmUyMDIwIiwidmVyaWZpY2F0aW9uTWV0aG9kIjoiZGlkOndlYjpsb2NhbGhvc3Q6QlBOTDAwMDAwMDAwMDAwMCMiLCJjcmVhdGVkIjoiMjAyMy0wNy0xOVQwOToxMTozOVoiLCJqd3MiOiJleUpoYkdjaU9pSkZaRVJUUVNKOS4uZmRuMnFVODVhdU9sdGRIRExkSEk3c0pWVjFaUGRmdHBpWGRfbmRYTjBkRmdTRFdpSXJTY2REMDN3dHZLTHFfSC1zaFFXZmgyUlllTW1ybEV6QWhmRHcifX19LCJleHAiOjE2ODk4MzQ4MDUsImp0aSI6ImIwODYzOWZiLWQ5MWEtNGUwZS1iNmY4LTYzYjdhMzQ1ZTRhZiJ9.80x0AB-OauefdeZfx1cwhitdVKRvCRFeFzYwU73DL7y4w34vu6BdfHWLBGjkwELxkQEoFfiTPOqtuyqhtsyDBg"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The request could not be completed due to a failed authorization."
          },
          "403": {
            "description": "The request could not be completed due to a forbidden scope value"
          },
          "404": {
            "description": "One or more of the requested verifiable credential types were not found",
            "content": {
              "application/json": {
                "examples": {
                  "One or more of the requested verifiable credential types were not found": {
                    "description": "One or more of the requested verifiable credential types were not found",
                    "value": {
                      "type": "about:blank",
                      "title": "Error Title",
                      "status": 404,
                      "detail": "Verifiable credential types that were not found",
                      "instance": "API endpoint",
                      "properties": {
                        "timestamp": 1689762476720
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Any other internal server error",
            "content": {
              "application/json": {
                "examples": {
                  "Internal server error": {
                    "description": "Internal server error",
                    "value": {
                      "type": "about:blank",
                      "title": "Error Title",
                      "status": 500,
                      "detail": "Error Details",
                      "instance": "API endpoint",
                      "properties": {
                        "timestamp": 1689762476720
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "sts_token": []
          }
        ]
      }
    },
    "/api/didDocuments/{identifier}": {
      "get": {
        "tags": [
          "DIDDocument"
        ],
        "summary": "Resolve DID Document",
        "description": "Resolve the DID document for a given DID or BPN",
        "operationId": "getDidDocument",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "Did or BPN",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "bpn": {
                "description": "bpn",
                "value": "BPNL000000000000"
              },
              "did": {
                "description": "did",
                "value": "did:web:localhost:BPNL000000000000"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "DID document",
            "content": {
              "application/json": {
                "examples": {
                  " DID document": {
                    "description": " DID document",
                    "value": {
                      "@context": [
                        "https://www.w3.org/ns/did/v1",
                        "https://w3c.github.io/vc-jws-2020/contexts/v1"
                      ],
                      "id": "did:web:localhost:BPNL000000000000",
                      "verificationMethod": [
                        {
                          "controller": "did:web:localhost:BPNL000000000000",
                          "id": "did:web:localhost:BPNL000000000000",
                          "publicKeyJwk": {
                            "crv": "Ed25519",
                            "kty": "OKP",
                            "x": "wAOQvr92L1m7RwrpeOrgWByVYvWmhRr4fJbiMwHEIdY"
                          },
                          "type": "JsonWebKey2020"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Wallet not found with provided bpn",
            "content": {
              "application/json": {
                "examples": {
                  "Wallet not found with provided bpn": {
                    "description": "Wallet not found with provided bpn",
                    "value": {
                      "type": "about:blank",
                      "title": "Wallet not found for identifier BPNL00000000000",
                      "status": 404,
                      "detail": "Wallet not found for identifier BPNL00000000000",
                      "instance": "/BPNL00000000000/did.json",
                      "properties": {
                        "timestamp": 1689767698010
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Any other internal server error",
            "content": {
              "application/json": {
                "examples": {
                  "Internal server error": {
                    "description": "Internal server error",
                    "value": {
                      "type": "about:blank",
                      "title": "Error Title",
                      "status": 500,
                      "detail": "Error Details",
                      "instance": "API endpoint",
                      "properties": {
                        "timestamp": 1689762476720
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Authenticate using access_token": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "CreateWalletRequest": {
        "required": [
          "businessPartnerNumber",
          "companyName",
          "didUrl"
        ],
        "type": "object",
        "properties": {
          "businessPartnerNumber": {
            "pattern": "^(BPN)(L|S|A)[0-9A-Z]{12}",
            "type": "string"
          },
          "companyName": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "didUrl": {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "SecureTokenRequest": {
        "type": "object",
        "properties": {
          "audience": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "grant_type": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "bearer_access_alias": {
            "type": "string"
          },
          "bearer_access_scope": {
            "type": "string"
          }
        }
      },
      "CredentialVerificationRequest": {
        "type": "object",
        "properties": {
          "jwt": {
            "type": "string",
            "writeOnly": true
          },
          "vc": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "writeOnly": true
          },
          "empty": {
            "type": "boolean"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      }
    },
    "securitySchemes": {
      "Authenticate using access_token": {
        "type": "apiKey",
        "description": "**Bearer (apiKey)**\nJWT Authorization header using the Bearer scheme.\nEnter **Bearer** [space] and then your token in the text input below:\nExample: Bearer 12345abcdef\n",
        "name": "Authorization",
        "in": "header"
      },
      "sts_token": {
        "type": "apiKey",
        "description": "**STS token**\nJWT Authorization header.\nEnter your token in the text input below:\nExample: 12345abcdef\n",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}